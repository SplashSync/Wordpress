################################################################################
#
#  This file is part of SplashSync Project.
#
#  Copyright (C) Splash Sync <www.splashsync.com>
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
#
#  For the full copyright and license information, please view the LICENSE
#  file that was distributed with this source code.
#
#  @author Bernard Paquier <contact@splashsync.com>
#
################################################################################

################################################################
# Set any variables we need
variables:
  # Configure mysql environment variables (https://hub.docker.com/r/_/mysql/)
  MYSQL_DATABASE:           wordpress
  MYSQL_ROOT_PASSWORD:      admin
  DOCKER_DRIVER:            overlay2
  COMPOSER_MEMORY_LIMIT:    -1
  TMP_DIR:                  /builds/SplashSync/Prestashop
  SCRIPTS_DIR:              /builds/SplashSync/Prestashop/travis
  TRAVIS_BUILD_DIR:         /var/www/html
  DB_SERVER:                mysql
  PS_INSTALL_AUTO:          1
  SPLASH_NO_APACHE:         1
  SPLASH_WS_ID:             ThisIsPsLastKey
  SPLASH_WS_KEY:            ThisTokenIsNotSoSecretChangeIt
  SPLASH_WS_HOST:           http://test.splashsync.local/ws/soap

################################################################
# Defined Pipeline Stages
stages:
  - tests
  - deploy

################################################################
# Functional Tests
################################################################

.functionnal:   &functionnal
#    when:       manual
    stage:      tests
    tags:       ['Dedicated']
#    artifacts:
#      paths:
#        - $CI_PROJECT_DIR/splash.json
#        - $CI_PROJECT_DIR/splash.yml
    services:
      - name: mysql:5.7
    ################################################################
    # Before Script
    before_script:
      - export PLUGIN_SLUG=$(basename $(pwd))
      ################################################################################
      # Clone Wordpress & Move to Web folder
      - git clone --depth=1 --branch="$WP_VERSION" git://develop.git.wordpress.org/ /tmp/Wordpress
      # Install WooCommerce Module
#      - git clone --depth=1 --branch="$WC_VERSION" https://github.com/woocommerce/woocommerce.git    /tmp/Wordpress/src/wp-content/plugins/woocommerce
      # Install Wp Multi-lang Module
#      - git clone --depth=1 https://github.com/VaLeXaR/wp-multilang.git       /tmp/Wordpress/src/wp-content/plugins/wp-multilang
#      - composer update --no-dev -d /tmp/Wordpress/src/wp-content/plugins/wp-multilang
      # Copy Splash Module to Wordpress folder
      - cd ..
      - mv "$PLUGIN_SLUG" "/tmp/Wordpress/src/wp-content/plugins/splash-connector"
      # Configure Wordpress
      - cd /tmp/Wordpress
#      - mysql -e "CREATE DATABASE wordpress_tests;" -uroot -padmin
      - mysql -h mysql -u root -padmin -e '\q'
      - cp wp-tests-config-sample.php wp-tests-config.php
      - sed -i "s/youremptytestdbnamehere/wordpress/" wp-tests-config.php
      - sed -i "s/yourusernamehere/root/" wp-tests-config.php
      - sed -i "s/yourpasswordhere/admin/" wp-tests-config.php
      - sed -i "s/localhost/mysql/" wp-tests-config.php
      - cat wp-tests-config.php

      ################################################################################
      # Move to Splash Plugin Dir
      - cd "/tmp/Wordpress/src/wp-content/plugins/splash-connector"
      ################################################################################
      # Build Module (Composer)
      - curl -s https://raw.githubusercontent.com/BadPixxel/Php-Sdk/main/ci/composer.sh | bash

#        - apt-get update
#        - apt-get install -y zip unzip git
#        - php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
#        - php composer-setup.php --install-dir=/usr/local/bin --filename=composer
#        - php -r "unlink('composer-setup.php');"
#        - echo "memory_limit=-1" >> /usr/local/etc/php/conf.d/memory.ini
#        - echo "error_reporting = E_COMPILE_ERROR|E_RECOVERABLE_ERROR|E_ERROR|E_CORE_ERROR" >> /usr/local/etc/php/conf.d/errors.ini
    ################################################################
    # Test Script
    script:
      ################################################################
      # Run Grumphp Main Test Sequence
      - php vendor/bin/grumphp run --testsuite=travis
      - php vendor/bin/grumphp run --testsuite=csfixer
      - php vendor/bin/grumphp run --testsuite=csfixer
#      # With PHP >= 7.1 => Execute Phpstan
#      - if [[ ${TRAVIS_PHP_VERSION:0:3} > "7.1" ]]; then php vendor/bin/grumphp run --testsuite=phpstan; fi
#
      ################################################################
      # Execute Phpunit
      - php vendor/bin/phpunit --version
      - php vendor/bin/phpunit -c grumphp/phpunit.xml.dist vendor/splash/phpcore/Tests/Core



      # Execute Local test Sequence
      - php vendor/bin/phpunit -c grumphp/phpunit.xml.dist --testsuite=Local
      # Execute Complete PhpUnit Tests
      - php vendor/bin/phpunit -c grumphp/phpunit.xml.dist
#      - phpdbg -qrr -d memory_limit=-1 vendor/bin/phpunit -c test/phpunit.xml.dist

#      - cd $TMP_DIR
#      ################################################################################
#      # Build Module (Composer)
#      - curl -s https://raw.githubusercontent.com/BadPixxel/Php-Sdk/main/ci/composer.sh | sh
#      ################################################################################
#      # Install Prestashop + WebServer (Apache & PHP-Fpm)
#      - cat $CI_PROJECT_DIR/docker/docker-entrypoint.sh | bash
#      ################################################################################
#      # Install Module
#      - bash $SCRIPTS_DIR/module/install.sh
#      ################################################################################
#      # Run Grumphp Main Test Sequence
#      - cd $TMP_DIR
#      - php modules/splashsync/vendor/bin/grumphp run -n --testsuite=travis
#      ################################################################################
#      # Run Grumphp CsFixer Test Sequence
#      - cd $TRAVIS_BUILD_DIR
#      - composer install
#      - php modules/splashsync/vendor/bin/grumphp run -n --testsuite=csfixer
#      ################################################################################
#      # Run Grumphp Php Stan Test Sequence
#      - if [ -f "/var/www/html/vendor/autoload.php" ]]; then php modules/splashsync/vendor/bin/grumphp run -n --testsuite=phpstan; fi
#      ################################################################################
#      # Run PhpUnit Core Test Sequence (Will Enable the Module)
#      - modules/splashsync/vendor/bin/phpunit -c travis/phpunit.xml.dist modules/splashsync/vendor/splash/phpcore/Tests/Core/
#      ################################################################################
#      # ALL PHP   =>  Run PhpUnit Local Sequence with No Data Inside
#      - modules/splashsync/vendor/bin/phpunit -c travis/phpunit.xml.dist --testsuite=Local
#      ################################################################################
#      # Run PhpUnit Test Sequence (With Coverage)
#      - php modules/splashsync/vendor/bin/phpunit -c travis/phpunit.xml.dist
#      ################################################################################
#      # Run PhpUnit Product with MSF Sequence
#      - php travis/setup_shops.php && php travis/setup_shops.php
#      - modules/splashsync/vendor/bin/phpunit -c travis/phpunit.products.xml
#      ################################################################################
#      # Run Grumphp Splash Manifest Sequence
#      - php modules/splashsync/vendor/bin/grumphp run -n --tasks=build-manifest


#Wp-1.7-Php-7.4:
#  image: registry.gitlab.com/badpixxel-projects/php-sdk:php-7.4
#  <<: *functionnal

#Ps-1.7-Php-7.2:
#  image:      prestashop/prestashop:1.7-7.2-apache
#  <<: *functionnal
#
Wp-5.4-Php-7.2:
    image:      registry.gitlab.com/badpixxel-projects/php-sdk:php-7.2
    variables:
        WP_VERSION:     5.4
        WC_VERSION:     3.9.2
        WP_MULTISITE:   1
    <<: *functionnal


#################################################################
## Build Documentation
#################################################################
pages:
  image:      registry.gitlab.com/badpixxel-projects/php-sdk:jekyll
  stage:      deploy
  tags:       ['Dedicated']
  retry:      2
  services:
    - docker:dind
  ################################################################################
  # Run Test Script
  script:
    # Run Composer to Build deps
    - curl -s https://raw.githubusercontent.com/BadPixxel/Php-Sdk/main/ci/composer.sh  | bash
    # Build Documentation
    - php vendor/bin/grumphp run --tasks=build-docs
  artifacts:
    paths:
      - public

#################################################################
## Build Module
#################################################################
module:
  image:      registry.gitlab.com/badpixxel-projects/php-sdk:php-7.2
  stage:      deploy
  tags:       ['Dedicated']
  retry:      2
  services:
    - docker:dind
  ################################################################################
  # Run Test Script
  script:
    # Run Composer to Build deps
    - curl -s https://raw.githubusercontent.com/BadPixxel/Php-Sdk/main/ci/composer.sh  | bash
    # Build Documentation
    - php vendor/bin/grumphp run --tasks=build-module
  artifacts:
    paths:
      - build
